{"version":3,"file":"static/js/713.2b10c0cb.chunk.js","mappings":"wIACA,QAA0B,2B,aCE1B,MAIE,EAJgBA,IAAmB,IAAlB,SAAEC,GAAUD,EAC7B,OAAOE,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeH,SAAEA,I,yECJ1C,MAYA,EANyB,CACrBI,cAPkBC,GAASA,EAAMC,SAASC,UAQ1CC,kBANsBH,GAASA,EAAMC,SAASG,MAO9CC,YALgBL,GAASA,EAAMC,SAASK,O,aCH5C,QAA8B,iCAA9B,EAAsE,0BAAtE,EAAwG,2BAAxG,EAA2I,2BAA3I,EAA+K,4B,aCI/K,MA2CA,EA3CoBC,KAEhB,MAAOC,EAAKC,IAAWC,EAAAA,EAAAA,UAAS,KACzBC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,IAE/BG,GAAWC,EAAAA,EAAAA,MASjB,OACGlB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAmBH,UACzCoB,EAAAA,EAAAA,MAAA,QAAMC,SATmBC,IAClBA,EAAEC,iBACFL,GAASM,EAAAA,EAAAA,IAAW,CAACX,OAAKG,YAC1BF,EAAQ,IACRG,EAAU,KAKaf,UAAWC,EAAYH,SAAA,EAC9CoB,EAAAA,EAAAA,MAAA,SAAOlB,UAAWC,EAAaH,SAAA,CAAC,QAE9BC,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXsB,MAAOZ,EACPa,SAAWJ,GAAMR,EAAQQ,EAAEK,OAAOF,OAClCG,YAAY,aAGhBR,EAAAA,EAAAA,MAAA,SAAOlB,UAAWC,EAAaH,SAAA,CAAC,UAE9BC,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXsB,MAAOT,EACPU,SAAWJ,GAAML,EAAUK,EAAEK,OAAOF,OACpCG,YAAY,eAGhB3B,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAe0B,KAAK,SAAQ7B,SAAC,sBCvCxD,EAAuB,0BAAvB,EAA4D,8BAA5D,EAAwG,iCAAxG,EAAkJ,4BC+BlJ,EA3BoB8B,KAChB,MAAMxB,GAAWyB,EAAAA,EAAAA,IAAYC,EAAkBxB,mBACzCU,GAAWC,EAAAA,EAAAA,MAEjB,OAAKb,GAAgC,IAApBA,EAAS2B,QAKtBhC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAYH,SACtBM,EAAS4B,KAAInC,IAAA,IAAC,GAAEoC,EAAE,KAAEtB,EAAI,OAAEG,GAAQjB,EAAA,OAC/BqB,EAAAA,EAAAA,MAAA,MAAalB,UAAWC,EAAgBH,SAAA,EACpCoB,EAAAA,EAAAA,MAAA,QAAMlB,UAAWC,EAAmBH,SAAA,CAC/Ba,EAAK,KAAGG,MAEbf,EAAAA,EAAAA,KAAA,UACIC,UAAWC,EACXiC,QAASA,IAAMlB,GAASmB,EAAAA,EAAAA,IAAcF,IAAKnC,SAC9C,aAPImC,SANVlC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBCTlB,EAAkC,sCAAlC,EAAiF,6BC+BjF,EAtBsBsC,IAClB,MAAMpB,GAAWC,EAAAA,EAAAA,MACXoB,GAAoBR,EAAAA,EAAAA,IAAYC,EAAkB5B,eAKxD,OAJAoC,EAAAA,EAAAA,YAAU,KACNtB,GAASuB,EAAAA,EAAAA,SACR,CAACvB,KAGFE,EAAAA,EAAAA,MAACsB,EAAAA,EAAS,CAAA1C,SAAA,EACVC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAcH,SAAC,cAC9BC,EAAAA,EAAAA,KAAA,OAAAD,SACCuC,IAAqBtC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBAE1BoB,EAAAA,EAAAA,MAAA,OAAKlB,UAAWC,EAAuBH,SAAA,EACzCC,EAAAA,EAAAA,KAACW,EAAW,KACZX,EAAAA,EAAAA,KAAC6B,EAAW,U","sources":["webpack://my-react-project/./src/components/Container/Container.module.css?9f71","components/Container/Container.js","redux/contacts/contacts-selectors.js","webpack://my-react-project/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://my-react-project/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://my-react-project/./src/views/ContactsView/ContactsView.module.css?919f","views/ContactsView/ContactsView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Container_wrapper__7tjtc\"};","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={styles.wrapper}>{children}</div>;\r\n  };\r\n  \r\n  export default Container;\r\n  \r\n\r\n  ","const selectLoading = state => state.contacts.isLoading;\r\n\r\nconst selectAllContacts = state => state.contacts.items;\r\n\r\nconst selectError = state => state.contacts.error\r\n\r\nconst contactsSelectors ={\r\n    selectLoading ,\r\n    selectAllContacts,\r\n    selectError,\r\n}\r\n\r\nexport default contactsSelectors;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"ContactForm_formWrapper__Qh2XM\",\"form\":\"ContactForm_form__mCmra\",\"label\":\"ContactForm_label__Pq8QT\",\"input\":\"ContactForm_input__dDnKq\",\"button\":\"ContactForm_button__f2FUe\"};","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\r\nimport styles from './ContactForm.module.css'\r\n\r\nconst ContactForm = ()=>{\r\n\r\n    const [name,setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        dispatch(addContact({name,number}))\r\n        setName('')\r\n        setNumber('')\r\n    }\r\n\r\n    return(\r\n       <div className={styles.formWrapper}>\r\n <form onSubmit={handleSubmit} className={styles.form}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder=\"Name\"\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            value={number}\r\n            onChange={(e) => setNumber(e.target.value)}\r\n            placeholder=\"Number\"\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">Add Contact</button>\r\n      </form>\r\n      \r\n    \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__B1u28\",\"listItem\":\"ContactList_listItem__yaRdo\",\"contactText\":\"ContactList_contactText__il5jH\",\"button\":\"ContactList_button__MSkfX\"};","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/contacts-operations\";\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n    const contacts = useSelector(contactsSelectors.selectAllContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    if (!contacts || contacts.length === 0) {\r\n        return <p>No contacts found.</p>;\r\n    }\r\n\r\n    return (\r\n        <ul className={styles.list}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <li key={id} className={styles.listItem}>\r\n                    <span className={styles.contactText}>\r\n                        {name}: {number}\r\n                    </span>\r\n                    <button\r\n                        className={styles.button}\r\n                        onClick={() => dispatch(deleteContact(id))}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ContactList;\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsWrapper\":\"ContactsView_contactsWrapper__3FXlZ\",\"header\":\"ContactsView_header__5H1Nq\"};","import React from 'react';\r\nimport Container from '../../components/Container/Container';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\r\nimport {fetchContacts} from '../../redux/contacts/contacts-operations'\r\nimport ContactForm from '../../components/ContactForm/ContactForm';\r\nimport ContactList from '../../components/ContactList/ContactList'\r\nimport styles from './ContactsView.module.css'\r\n\r\nconst ContactsView = (params)=>{\r\n    const dispatch = useDispatch();\r\n    const isLoadingContacts = useSelector(contactsSelectors.selectLoading)\r\n    useEffect(() => {\r\n        dispatch(fetchContacts());\r\n      }, [dispatch]);\r\n\r\n    return(\r\n        <Container>   \r\n        <h2 className={styles.header}>Contacts</h2>\r\n        <div>\r\n        {isLoadingContacts && <h2>Loading...</h2>}\r\n        </div>\r\n        <div className={styles.contactsWrapper}>\r\n      <ContactForm />\r\n      <ContactList />\r\n    </div>\r\n    </Container>\r\n    )\r\n \r\n}\r\n\r\nexport default ContactsView;"],"names":["_ref","children","_jsx","className","styles","selectLoading","state","contacts","isLoading","selectAllContacts","items","selectError","error","ContactForm","name","setName","useState","number","setNumber","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","addContact","value","onChange","target","placeholder","type","ContactList","useSelector","contactsSelectors","length","map","id","onClick","deleteContact","params","isLoadingContacts","useEffect","fetchContacts","Container"],"sourceRoot":""}